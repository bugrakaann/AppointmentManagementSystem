@using Models.Enums
@{
    ViewData["title"] = "Randevu Oluþtur";
}
@model IEnumerable<DTOs.DTOs.AppointmentDto>



<!-- Main Wrapper -->
<div class="main-wrapper">
    <!-- Breadcrumb -->
    <div class="breadcrumb-bar">
        <div class="container-fluid">
            <div class="row align-items-center">
                <div class="col-md-12 col-12">
                    <h2 class="breadcrumb-title">Randevu Oluþtur</h2>
                </div>
            </div>
        </div>
    </div>
    <!-- /Breadcrumb -->
    <!-- Page Content -->
    <div class="content">
        <div class="container">
            <!-- FullCalendar container -->
            <div class="row mb-2">
                <div class="d-flex justify-content-center">
                    <div class="col-mb-6">
                        <input class="form-control" type="date" id="calendarDate" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                    </div>
                </div>
            </div>
            <div id="calendar"></div>
        </div>
    </div>

</div>
<!-- /Main Wrapper -->
<!-- Edit Customer Details Modal -->
<div class="modal fade custom-modal" id="editCustomerDetailsModal" tabindex="-1" aria-labelledby="editCustomerDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-secondary text-white">
                <h5 class="modal-title" id="editCustomerDetailsModalLabel">Update Your Information</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="customerDetailsForm" action="@Url.Action("SaveChanges", "Booking")" method="post">

                    <div class="form-section">
                        <div class="form-group row mb-3">
                            <label for="customerName" class="col-sm-3 col-form-label">First Name</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="customerName" name="Name" required>
                            </div>
                        </div>
                        <div class="form-group row mb-3">
                            <label for="customerSurname" class="col-sm-3 col-form-label">Surname</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="customerSurname" name="Surname" required>
                            </div>
                        </div>
                        <div class="form-group row mb-3">
                            <label for="customerPhoneNumber" class="col-sm-3 col-form-label">Phone</label>
                            <div class="col-sm-9">
                                <input type="tel" class="form-control" id="customerPhoneNumber" name="PhoneNumber" required>
                            </div>
                        </div>
                        <div class="form-group row mb-3">
                            <label for="customerEmail" class="col-sm-3 col-form-label">Email</label>
                            <div class="col-sm-9">
                                <input type="email" class="form-control" id="customerEmail" name="Email" required>
                            </div>
                        </div>
                        <div class="form-group row mb-3">
                            <label for="customerAddress" class="col-sm-3 col-form-label">Address</label>
                            <div class="col-sm-9">
                                <input type="text" class="form-control" id="customerAddress" name="Address" required>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-success">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- /Edit Customer Details Modal -->
@section Scripts {
    <!-- Bootstrap Datepicker JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/locales/bootstrap-datepicker.tr.min.js"></script>

    <!-- FullCalendar JS -->
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.5/locales/tr.js"></script>

    <script>

        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                firstDay: 1,
                timeZone: 'local',
                locale: 'tr',
                slotLabelFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                },
                eventTimeFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                },
                headerToolbar: {
                    left: '',
                    right: '',
                    center: 'prev,next'
                },
                selectable: true,
                selectAllow: function (selectInfo) {
                    // Allow selection only between 10:00 AM and 12:00 PM
                    var startHour = selectInfo.start.getHours();
                    var endHour = selectInfo.end.getHours();

                    return (startHour >= 10 && endHour <= 12);
                },
                select: function (info) {
                    alert('Selected: ' + info.startStr + ' to ' + info.endStr);
                },
                datesSet: function (info) {
                    loadCalendarEvents(info.start, info.end);
                    $("#calendarDate").val(formattedDate(info.start));
                }
            });
            calendar.render();

            $("#calendarDate").on('change', function () {
                const selectedDate = $(this).val();
                selectedDate && calendar.gotoDate(selectedDate);
            });

            function loadCalendarEvents(startDate, endDate) {
                startDate = formattedDate(startDate);
                endDate = formattedDate(endDate);
                $.ajax({
                    url: '@Url.Action("GetSlots", "Appointments")',
                    type: 'GET',
                    dataType: 'JSON',
                    data: {
                        startDate: startDate,
                        endDate: endDate
                    },
                    success: function (slots) {
                        slots.forEach(slot => {
                            const event = {
                                id: slot.id,
                                start: slot.startTime,
                                end: slot.endTime,
                                editable: false
                            }
                            if (slot.status === 1) {
                                event.title = "UYGUN DEÐÝL";
                                event.color = "gray";
                            }
                            else if (slot.status === 2) {
                                event.title = "DOLU";
                                event.color = "red";
                            } else {
                                return;
                            }

                            if (!calendar.getEventById(event.id)) {
                                calendar.addEvent(event);
                            }
                        });
                    },
                    error: function (error) {
                        alert("Bir hata oluþtu!")
                    }
                });
            }

        });

        function formattedDate(dateTime) {
            return moment(dateTime).format("YYYY-MM-DD")
        }

    </script>
}